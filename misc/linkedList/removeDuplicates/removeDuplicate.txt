Prompt:

You are given a sorted linked list where duplicate values may appear consecutively. Your task is to implement a function that removes duplicate nodes from the linked list such that each element appears only once.

Requirements:
Write a function removeDuplicatesFromLinkedList(linkedList) that:
Takes a LinkedList as input.
Modifies the linked list in place to remove duplicate values.
Returns the updated linked list.
Implement helper functions to:
Create a linked list from a list of values.
Print the linked list to visualize its contents before and after removing duplicates.
Input:
A sorted linked list with values like:
rust
Copy code
1 --> 1 --> 3 --> 3 --> 4 --> 4 --> 4 --> 5 --> 6 --> 6
Expected Output:
After removing duplicates, the linked list should be:
rust
Copy code
1 --> 3 --> 4 --> 5 --> 6
Constraints:
The input linked list is sorted.
Use the provided LinkedList class, which has attributes:
value: Stores the node's value.
next: Points to the next node in the linked list.
Example Execution:
Input:

python
Copy code
values = [1, 1, 3, 3, 4, 4, 4, 5, 6, 6]
linkedList = createLinkedList(values)
Output:

plaintext
Copy code
Initial Linked List:
1 --> 1 --> 3 --> 3 --> 4 --> 4 --> 4 --> 5 --> 6 --> 6

Linked List after removing duplicates:
1 --> 3 --> 4 --> 5 --> 6
Implementation Details:

Include a helper function createLinkedList(values) to generate the linked list from a list of integers.
Include a helper function printLinkedList(linkedList) to print the contents of the linked list.
Ensure the function removeDuplicatesFromLinkedList traverses the linked list only once.